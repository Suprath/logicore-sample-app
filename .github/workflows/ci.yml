# FILE: .github/workflows/ci.yml

name: Simulate Deployment and Trigger Correlator

# Define the triggers for this workflow
on:
  # Trigger automatically on every push to the 'main' branch
  push:
    branches: [ "main" ]
  
  # Also allow this workflow to be run MANUALLY from the Actions tab on GitHub
  workflow_dispatch:
    inputs:
      # When run manually, present an input field with a dropdown of choices
      alert_summary:
        description: 'The simulated alert summary to send to the Correlator'
        required: true
        type: choice
        options:
          - "Suspicious user activity detected (Triggers Security Scan)"
          - "p99 latency is high on checkout (Triggers Performance Scan)"
          - "500 error rate spike on login (Triggers Reliability Scan)"
          - "A generic default alert"

# A workflow run is made up of one or more jobs. We only need one.
jobs:
  # This single job's only purpose is to send the webhook.
  fire-webhook:
    runs-on: ubuntu-latest
    steps:
      # This job does not need to check out the code. It just sends the event data.
      - name: "Fire Webhook to Correlator"
        run: |
          # If the workflow was run manually ('workflow_dispatch' event), the 'inputs.alert_summary' will exist.
          # If it was run by a 'push' event, it will be empty, so we fall back to a default message.
          ALERT_MESSAGE="${{ github.event.inputs.alert_summary || 'Suspicious activity from push trigger' }}"

          # Prepare the JSON payload safely.
          JSON_PAYLOAD=$(printf '{
            "service_name": "%s",
            "commit_hash": "%s",
            "alert_summary": "%s"
          }' "${{ github.repository }}" "${{ github.sha }}" "$ALERT_MESSAGE")

          echo "Sending alert to Correlator: $ALERT_MESSAGE"

          # --- THE FIX IS HERE ---
          # We now append the '/webhook' path directly in the script.
          # This makes the secret setup simpler and less error-prone for the user.
          FULL_URL="${{ secrets.CORRELATOR_WEBHOOK_URL }}/webhook"

          # Send the webhook to the fully constructed URL.
          curl -sf -X POST "$FULL_URL" \
          -H "Content-Type: application/json" \
          -H "User-Agent: GitHub-Actions-Webhook" \
          -d "$JSON_PAYLOAD"